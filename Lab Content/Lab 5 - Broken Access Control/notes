
Log in with Brent's account credentials. His username is `Brent.Macrae` and his password is `superman`. 

Challenge 1: Find the obscured directory's first exposed file.
	Solution: /29f553b835f8/backup.php
	Flag: e8d0bdb011e2a225037067f952cda298

Challenge 2: Find the obscured directory's second exposed file. Coax it into responding to your request.
	Solution: /29f553b835f8/admin.php?admin=1
	Flag: 70aa363f72e4dd0f34f8be987aabb7ff	

Challenge 3: Find the user ID for user 'Michael.Miller'.
	Solution: Brute-force the /api/user/details.php?u=[id_value_here] endpoint with an ID value between 8000 and 9000. Be sure to include your session cookie!
	Flag: 9dcc44f904f3af84be87150dbb293a02

Challenge 4: Download another user's messages.
	Solution: The export messages functionality at /export.php generates a downloadable static file at /downloads/[epoch]-messages.csv. Find another user's messages by brute-forcing a recent epoch value (approximately 1 hour in the past).
	Flag: 43537addf7a4dab3ab85330ebce981e4

Challenge 5: Access the hidden post.
	Solution: viewPost.php pulls posts from /api/posts/[id].php; however, JS blocks posts with an ID higher than 50. Delete this JS and brute force to find the post. Note that both the correct referer and your session cookie must be set properly if you brute-force the API directly.
	Flag: 5e4f740c6245dac666c2ebc638184e8d

Challenge 6: Find the hidden admin API endpoint.
	Solution: /api/admin/manage.php
	Flag: 5bb71fb93c8228e45687746a209d89a2

Challenge 7: What API endpoint does not require you to be logged in to access its content?
	Solution: /api/posts/released.php
	Flag: released